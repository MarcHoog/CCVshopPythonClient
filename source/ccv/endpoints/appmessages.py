"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/appmessages/:id/ → Deletes one app message
- GET /:version/apps/:id/appmessages/ → Gets all messages for this app
- GET /:version/appmessages/:id/ → Get one app message
- PATCH /:version/appmessages/:id/ → PATCH an existing app message
- POST /:version/apps/:id/appmessages/ → Creates a message associated with this app
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Appmessages:
    def __init__(self, client: 'CCVClient'):
        """
        App messages are shown within the backend of the merchant.
        """
        self.client: 'CCVClient' = client

    def deletes_one_app_message(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Deletes one app message
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/appmessages/{id}/",
        )

    def gets_all_messages_for_this_app(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Gets all messages for this app
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/apps/{id}/appmessages/",
        )

    def get_one_app_message(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one app message
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/appmessages/{id}/",
        )

    def patch_an_existing_app_message(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        PATCH an existing app message
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/appmessages/{id}/",
            body=body,
        )

    def creates_a_message_associated_with_this_app(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Creates a message associated with this app
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/apps/{id}/appmessages/",
            body=body,
        )