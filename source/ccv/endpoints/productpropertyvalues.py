"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/productpropertyvalues/:id/ → Delete a product property value
- GET /:version/productpropertyvalues/:id/ → Get one product property value
- PATCH /:version/productpropertyvalues/:id/ → Patch a product Product property value
- POST /:version/productpropertyvalues/ → Post a product property value
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Productpropertyvalues:
    def __init__(self, client: 'CCVClient'):
        """
        A Product property value can hold multiple properties.
        """
        self.client: 'CCVClient' = client

    def delete_a_product_property_value(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete a product property value
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/productpropertyvalues/{id}/",
        )

    def get_one_product_property_value(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one product property value
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/productpropertyvalues/{id}/",
        )

    def patch_a_product_product_property_value(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch a product Product property value
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/productpropertyvalues/{id}/",
            body=body,
        )

    def post_a_product_property_value(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post a product property value
        """
        return self.client._post(
            uri_path="/api/rest/v1/productpropertyvalues/",
            body=body,
        )