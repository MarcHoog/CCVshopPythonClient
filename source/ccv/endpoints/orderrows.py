"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/orderrows/:id/ → Delete an existing order row
- GET /:version/orders/:id/orderrows/ → Get all order rows of this order
- GET /:version/orderrows/:id/ → Get one order row
- PATCH /:version/orderrows/:id/ → This gives the option to change orderrow's count and prices of non-completed orders
- POST /:version/orders/:id/orderrows/ → Post a new order row to an existing order
- PUT /:version/orders/:id/orderrows/ → Replace an order row collection of an existing order
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Orderrows:
    def __init__(self, client: 'CCVClient'):
        """
        These are the order rows of an order.
        """
        self.client: 'CCVClient' = client

    def delete_an_existing_order_row(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete an existing order row
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/orderrows/{id}/",
        )

    def get_all_order_rows_of_this_order(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all order rows of this order
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/orders/{id}/orderrows/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_one_order_row(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one order row
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/orderrows/{id}/",
        )

    def this_gives_the_option_to_change_orderrow's_count_and_prices_of_non-completed_orders(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        This gives the option to change orderrow's count and prices of non-completed orders
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/orderrows/{id}/",
            body=body,
        )

    def post_a_new_order_row_to_an_existing_order(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post a new order row to an existing order
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/orders/{id}/orderrows/",
            body=body,
        )

    def replace_an_order_row_collection_of_an_existing_order(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Replace an order row collection of an existing order
        """
        return self.client._put(
            uri_path=f"/api/rest/v1/orders/{id}/orderrows/",
            body=body,
        )