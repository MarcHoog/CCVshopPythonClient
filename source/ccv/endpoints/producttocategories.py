"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/producttocategories/:id/ → Delete a product xref
- GET /:version/categories/:id/producttocategories/ → Get all products of this category
- GET /:version/producttocategories/:id/ → Get one product xref
- GET /:version/products/:id/producttocategories/ → Get all photos of this product
- PATCH /:version/producttocategories/:id/ → Patch a product
- POST /:version/producttocategories/ → Post a product
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Producttocategories:
    def __init__(self, client: 'CCVClient'):
        """
        Product 2 categories of the webshop.
        """
        self.client: 'CCVClient' = client

    def delete_a_product_xref(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete a product xref
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/producttocategories/{id}/",
        )

    def get_all_products_of_this_category(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all products of this category
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/categories/{id}/producttocategories/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_one_product_xref(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one product xref
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/producttocategories/{id}/",
        )

    def get_all_photos_of_this_product(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all photos of this product
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/products/{id}/producttocategories/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def patch_a_product(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch a product
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/producttocategories/{id}/",
            body=body,
        )

    def post_a_product(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post a product
        """
        return self.client._post(
            uri_path="/api/rest/v1/producttocategories/",
            body=body,
        )