"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/productrelevant/:id/ → Delete one relevant product
- GET /:version/products/:id/productrelevant/ → Get all relevant products of this product
- GET /:version/productrelevant/:id/ → Get one relevant product
- POST /:version/products/:id/productrelevant/ → Create a relevant product
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Productrelevant:
    def __init__(self, client: 'CCVClient'):
        """
        A product can have other products marked as 'relevant'. These products will be shown on the product page.
        """
        self.client: 'CCVClient' = client

    def delete_one_relevant_product(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete one relevant product
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/productrelevant/{id}/",
        )

    def get_all_relevant_products_of_this_product(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get all relevant products of this product
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/products/{id}/productrelevant/",
        )

    def get_one_relevant_product(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one relevant product
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/productrelevant/{id}/",
        )

    def create_a_relevant_product(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Create a relevant product
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/products/{id}/productrelevant/",
            body=body,
        )