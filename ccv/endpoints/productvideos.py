"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/productvideos/:id/ → Delete a product video.
- GET /:version/products/:id/productvideos/ → Get all videos that belong to this product.
- GET /:version/productvideos/:id/ → Get one product video.
- OPTIONS /:version/productvideos/ → None
- PATCH /:version/productvideos/:id/ → Patch a product video.
- POST /:version/products/:id/productvideos/ → Post a video for this product.
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Productvideos(CCVApiEndpoints):
    """
    These are embedded video of this product. The videos aren't hosted on the webshop, but should be added as embedded HTML code.
    """

    def delete_a_product_video(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete a product video.
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/productvideos/{id}/",
        )

    def get_all_videos_that_belong_to_this_product(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all videos that belong to this product.
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/products/{id}/productvideos/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_one_product_video(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one product video.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/productvideos/{id}/",
        )

    def patch_a_product_video(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch a product video.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/productvideos/{id}/",
            body=body,
        )

    def post_a_video_for_this_product(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post a video for this product.
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/products/{id}/productvideos/",
            body=body,
        )