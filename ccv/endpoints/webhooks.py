"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/webhooks/:id/ → Deletes an existing web hook
- GET /:version/webhooks/:id/ → Gets one web hook
- GET /:version/webhooks/ → Gets all webhooks
- PATCH /:version/webhooks/:id/ → Updates an existing web hook
- POST /:version/webhooks/ → Creates a web hook on given event
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Webhooks:
    def __init__(self, client: 'CCVClient'):
        """
        Webhooks will be triggered on the given events in the webshop. They will contain a payload concerning the event.
        """
        self.client: 'CCVClient' = client

    def deletes_an_existing_web_hook(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Deletes an existing web hook
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/webhooks/{id}/",
        )

    def gets_one_web_hook(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Gets one web hook
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/webhooks/{id}/",
        )

    def gets_all_webhooks(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Gets all webhooks
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/webhooks/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def updates_an_existing_web_hook(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Updates an existing web hook
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/webhooks/{id}/",
            body=body,
        )

    def creates_a_web_hook_on_given_event(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Creates a web hook on given event
        """
        return self.client._post(
            uri_path="/api/rest/v1/webhooks/",
            body=body,
        )