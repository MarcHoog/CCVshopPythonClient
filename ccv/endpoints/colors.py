"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- GET /:version/colors/ → Get all colors
- GET /:version/colors/:id/ → Get one color
- POST /:version/colors/ → Create a new color based on a hex color code
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Colors:
    def __init__(self, client: 'CCVClient'):
        """
        Products can be linked to colors. Colors can be used in product filters for instance. Transparent and Multicolor are also default colors.
        """
        self.client: 'CCVClient' = client

    def get_all_colors(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all colors
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/colors/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_one_color(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one color
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/colors/{id}/",
        )

    def create_a_new_color_based_on_a_hex_color_code(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Create a new color based on a hex color code
        """
        return self.client._post(
            uri_path="/api/rest/v1/colors/",
            body=body,
        )