"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/appcodeblocks/:id/ → Deletes a code block associated with an App
- GET /:version/apps/:id/appcodeblocks/ → Gets all app code blocks associated with this resource id
- GET /:version/appcodeblocks/:id/ → Gets one app code block associated with this resource id
- POST /:version/apps/:id/appcodeblocks/ → Creates a code block associated with an App
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Appcodeblocks:
    def __init__(self, client: 'CCVClient'):
        """
        App code blocks are pieces of code that are displayed at certain locations in the webshop.
        """
        self.client: 'CCVClient' = client

    def deletes_a_code_block_associated_with_an_app(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Deletes a code block associated with an App
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/appcodeblocks/{id}/",
        )

    def gets_all_app_code_blocks_associated_with_this_resource_id(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Gets all app code blocks associated with this resource id
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/apps/{id}/appcodeblocks/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def gets_one_app_code_block_associated_with_this_resource_id(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Gets one app code block associated with this resource id
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/appcodeblocks/{id}/",
        )

    def creates_a_code_block_associated_with_an_app(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Creates a code block associated with an App
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/apps/{id}/appcodeblocks/",
            body=body,
        )