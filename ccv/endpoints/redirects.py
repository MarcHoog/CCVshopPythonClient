"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/redirects/:id/ → Deletes a single redirect url.
- GET /:version/redirects/:id/ → Get one redirect url by Id.
- GET /:version/redirects/ → Get all redirect urls as a collection. You can use start and size parameters.
- OPTIONS /:version/redirects/ → None
- PATCH /:version/redirects/:id/ → Updates an existing redirect. This resource describes redirects. Redirects are http 301 forwards from source_url to target_url. This can for instance be used to keep SEO ranking of outdated urls. This source_url will be relative and must be unique. The redirects will work for any domain resolving to this webshop. The target_url can be relative or absolute. It can also be a different domain. Carefully when creating circular references.
- POST /:version/redirects/ → Creates a new redirect. This resource describes redirects. Redirects are http 301 forwards from source_url to target_url. This can for instance be used to keep SEO ranking of outdated urls. This source_url will be relative and must be unique. The redirects will work for any domain resolving to this webshop. The target_url can be relative or absolute. It can also be a different domain. Carefully when creating circular references.
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Redirects(CCVApiEndpoints):
    """
    This resource describes redirects. Redirects are http 301 forwards from source_url to target_url. This can for instance be used to keep SEO ranking of outdated urls. This source_url will be relative and must be unique. The redirects will work for any domain resolving to this webshop. The target_url can be relative or absolute. It can also be a different domain. Carefully when creating circular references.
    """

    def deletes_a_single_redirect_url(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Deletes a single redirect url.
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/redirects/{id}/",
        )

    def get_one_redirect_url_by_id(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one redirect url by Id.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/redirects/{id}/",
        )

    def get_all_redirect_urls_as_a_collection_you_can_use_start_and_size_parameters(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all redirect urls as a collection. You can use start and size parameters.
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/redirects/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def updates_an_existing_redirect_this_resource_describes_redirects_redirects_are_http_301_forwards_from_source_url_to_target_url_this_can_for_instance_be_used_to_keep_seo_ranking_of_outdated_urls_this_source_url_will_be_relative_and_must_be_unique_the_redirects_will_work_for_any_domain_resolving_to_this_webshop_the_target_url_can_be_relative_or_absolute_it_can_also_be_a_different_domain_carefully_when_creating_circular_references(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Updates an existing redirect. This resource describes redirects. Redirects are http 301 forwards from source_url to target_url. This can for instance be used to keep SEO ranking of outdated urls. This source_url will be relative and must be unique. The redirects will work for any domain resolving to this webshop. The target_url can be relative or absolute. It can also be a different domain. Carefully when creating circular references.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/redirects/{id}/",
            body=body,
        )

    def creates_a_new_redirect_this_resource_describes_redirects_redirects_are_http_301_forwards_from_source_url_to_target_url_this_can_for_instance_be_used_to_keep_seo_ranking_of_outdated_urls_this_source_url_will_be_relative_and_must_be_unique_the_redirects_will_work_for_any_domain_resolving_to_this_webshop_the_target_url_can_be_relative_or_absolute_it_can_also_be_a_different_domain_carefully_when_creating_circular_references(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Creates a new redirect. This resource describes redirects. Redirects are http 301 forwards from source_url to target_url. This can for instance be used to keep SEO ranking of outdated urls. This source_url will be relative and must be unique. The redirects will work for any domain resolving to this webshop. The target_url can be relative or absolute. It can also be a different domain. Carefully when creating circular references.
        """
        return self.client._post(
            uri_path="/api/rest/v1/redirects/",
            body=body,
        )