"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/productproperties/:id/ → Delete a product attachment.
- GET /:version/productpropertygroups/:id/productproperties/ → Get all product properties that belongs too this product property group.
- GET /:version/productproperties/:id/ → Get one product property.
- OPTIONS /:version/productproperties/ → None
- PATCH /:version/productproperties/:id/ → Patch a product Product property group.
- POST /:version/productpropertygroups/:id/productproperties/ → Create a new product property that belongs too a product property group.
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Productproperties(CCVApiEndpoints):
    """
    A Product property group can hold multiple properties.
    """

    def delete_a_product_attachment(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete a product attachment.
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/productproperties/{id}/",
        )

    def get_all_product_properties_that_belongs_too_this_product_property_group(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all product properties that belongs too this product property group.
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/productpropertygroups/{id}/productproperties/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_one_product_property(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one product property.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/productproperties/{id}/",
        )

    def patch_a_product_product_property_group(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch a product Product property group.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/productproperties/{id}/",
            body=body,
        )

    def create_a_new_product_property_that_belongs_too_a_product_property_group(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Create a new product property that belongs too a product property group.
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/productpropertygroups/{id}/productproperties/",
            body=body,
        )