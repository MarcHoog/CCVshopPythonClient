"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/users/:id/ → Delete a user.
- GET /:version/usergroups/:id/users/ → Get all users that belong to this usergroup.
- GET /:version/users/ → Get all users.
- GET /:version/users/:id/ → Get one user.
- OPTIONS /:version/users/ → None
- PATCH /:version/users/:id/ → Patch a user.
- POST /:version/users/ → Post a user.
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Users(CCVApiEndpoints):
    """
    The users of the webshop. If the webshop has the login system enabled, these users can login with there own credentials to order. Users can link to user groups, but this is optional.
    """

    def delete_a_user(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete a user.
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/users/{id}/",
        )

    def get_all_users_that_belong_to_this_usergroup(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all users that belong to this usergroup.
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/usergroups/{id}/users/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_all_users(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all users.
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/users/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_one_user(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one user.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/users/{id}/",
        )

    def patch_a_user(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch a user.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/users/{id}/",
            body=body,
        )

    def post_a_user(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post a user.
        """
        return self.client._post(
            uri_path="/api/rest/v1/users/",
            body=body,
        )