"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/apppsppaymethods/:id/ → Deletes a paymethod from the app psp. Order's payment status with this paymethod will no longer be updated.
- GET /:version/apppsp/:id/apppsppaymethods/ → Gets all paymethods of this App Payment Service Provider.
- GET /:version/apppsppaymethods/:id/ → Gets a single paymethod by resource id.
- OPTIONS /:version/apppsppaymethods/ → None
- PATCH /:version/apppsppaymethods/:id/ → Patches a paymethod. Suitable for updating Issuer collections, new icons or name changes.
- POST /:version/apppsp/:id/apppsppaymethods/ → Creates a new paymethod within the App Payment Service Provider. This paymethod will be available for the merchant to activate in the webshop's backend.
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Apppsppaymethods(CCVApiEndpoints):
    """
    App PSP Paymethods are child resources of the App Payment Service Provider. These paymethods are available in the webshop's backend.
    """

    def deletes_a_paymethod_from_the_app_psp_order's_payment_status_with_this_paymethod_will_no_longer_be_updated(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Deletes a paymethod from the app psp. Order's payment status with this paymethod will no longer be updated.
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/apppsppaymethods/{id}/",
        )

    def gets_all_paymethods_of_this_app_payment_service_provider(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Gets all paymethods of this App Payment Service Provider.
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/apppsp/{id}/apppsppaymethods/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def gets_a_single_paymethod_by_resource_id(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Gets a single paymethod by resource id.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/apppsppaymethods/{id}/",
        )

    def patches_a_paymethod_suitable_for_updating_issuer_collections,_new_icons_or_name_changes(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patches a paymethod. Suitable for updating Issuer collections, new icons or name changes.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/apppsppaymethods/{id}/",
            body=body,
        )

    def creates_a_new_paymethod_within_the_app_payment_service_provider_this_paymethod_will_be_available_for_the_merchant_to_activate_in_the_webshop's_backend(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Creates a new paymethod within the App Payment Service Provider. This paymethod will be available for the merchant to activate in the webshop's backend.
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/apppsp/{id}/apppsppaymethods/",
            body=body,
        )