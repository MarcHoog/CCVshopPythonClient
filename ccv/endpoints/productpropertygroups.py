"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/productpropertygroups/:id/ → Delete a product property group.
- GET /:version/productpropertygroups/:id/ → Get one product property group.
- GET /:version/productpropertygroups/ → Get all product product property groups.
- OPTIONS /:version/productpropertygroups/ → None
- PATCH /:version/productpropertygroups/:id/ → Patch a product Product property group.
- POST /:version/productpropertygroups/ → Post a new product property group.
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Productpropertygroups(CCVApiEndpoints):
    """
    A Product property group can hold multiple properties.
    """

    def delete_a_product_property_group(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete a product property group.
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/productpropertygroups/{id}/",
        )

    def get_one_product_property_group(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one product property group.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/productpropertygroups/{id}/",
        )

    def get_all_product_product_property_groups(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all product product property groups.
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/productpropertygroups/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def patch_a_product_product_property_group(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch a product Product property group.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/productpropertygroups/{id}/",
            body=body,
        )

    def post_a_new_product_property_group(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post a new product property group.
        """
        return self.client._post(
            uri_path="/api/rest/v1/productpropertygroups/",
            body=body,
        )