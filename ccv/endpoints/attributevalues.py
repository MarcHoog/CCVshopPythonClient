"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/attributevalues/:id/ → Delete an attribute value
- GET /:version/attributecombinations/:id/attributevalues/ → Gets all values for the attribute
- GET /:version/attributevalues/:id/ → Gets on value of an attribute
- GET /:version/attributes/:id/attributevalues/ → Gets all values for the attribute
- PATCH /:version/attributevalues/:id/ → Patch an attribute value
- POST /:version/attributes/:id/attributevalues/ → Post an attribute value
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Attributevalues:
    def __init__(self, client: 'CCVClient'):
        """
        Posible values of an attribute.
        """
        self.client: 'CCVClient' = client

    def delete_an_attribute_value(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete an attribute value
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/attributevalues/{id}/",
        )

    def gets_all_values_for_the_attribute(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Gets all values for the attribute
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/attributecombinations/{id}/attributevalues/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def gets_on_value_of_an_attribute(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Gets on value of an attribute
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/attributevalues/{id}/",
        )

    def gets_all_values_for_the_attribute(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Gets all values for the attribute
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/attributes/{id}/attributevalues/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def patch_an_attribute_value(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch an attribute value
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/attributevalues/{id}/",
            body=body,
        )

    def post_an_attribute_value(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post an attribute value
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/attributes/{id}/attributevalues/",
            body=body,
        )