"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- GET /:version/orders/:id/ordernotifications/ → Get all order notifications belonging to an order
- GET /:version/ordernotifications/:id/ → Get one order notification based on an Id
- POST /:version/orders/:id/ordernotifications/ → Create a order notification of the given type
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Ordernotifications:
    def __init__(self, client: 'CCVClient'):
        """
        Order notifications are used to send e-mails of the different types. For instance, an order's invoice can be sent to the customer. GET will return all previous notifications created by the API.
        """
        self.client: 'CCVClient' = client

    def get_all_order_notifications_belonging_to_an_order(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all order notifications belonging to an order
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/orders/{id}/ordernotifications/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_one_order_notification_based_on_an_id(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one order notification based on an Id
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/ordernotifications/{id}/",
        )

    def create_a_order_notification_of_the_given_type(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Create a order notification of the given type
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/orders/{id}/ordernotifications/",
            body=body,
        )