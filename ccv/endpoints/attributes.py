"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/attributes/:id/ → Delete an attribute.
- GET /:version/attributecombinations/:id/attributes/ → Gets all values for the attribute.
- GET /:version/attributes/ → Gets all attributes of this webshop.
- GET /:version/attributes/:id/ → Gets one attribute.
- OPTIONS /:version/attributes/ → None
- PATCH /:version/attributes/:id/ → Patch an attribute.
- POST /:version/attributes/ → Post an attribute. The Attributes app must be installed in the webshop.
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Attributes(CCVApiEndpoints):
    """
    The attributes of the webshop. Products can link to attributes. Attributes are variations of a product (ie. color, size etc).
    """

    def delete_an_attribute(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete an attribute.
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/attributes/{id}/",
        )

    def gets_all_values_for_the_attribute(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Gets all values for the attribute.
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/attributecombinations/{id}/attributes/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def gets_all_attributes_of_this_webshop(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Gets all attributes of this webshop.
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/attributes/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def gets_one_attribute(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Gets one attribute.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/attributes/{id}/",
        )

    def patch_an_attribute(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch an attribute.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/attributes/{id}/",
            body=body,
        )

    def post_an_attribute_the_attributes_app_must_be_installed_in_the_webshop(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post an attribute. The Attributes app must be installed in the webshop.
        """
        return self.client._post(
            uri_path="/api/rest/v1/attributes/",
            body=body,
        )