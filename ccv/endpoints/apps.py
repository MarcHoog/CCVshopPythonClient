"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- GET /:version/appstorecategories/:id/apps/ → Get all apps associated by this categorie id
- GET /:version/apps/:id/ → Gets one app associated with this apikey
- GET /:version/apps/ → Gets all apps associated with this apikey
- PATCH /:version/apps/:id/ → Updates an existing app
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Apps:
    def __init__(self, client: 'CCVClient'):
        """
        Apps are for developers of remote apps only. Only apps associated with the apikey are shown.
        """
        self.client: 'CCVClient' = client

    def get_all_apps_associated_by_this_categorie_id(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all apps associated by this categorie id
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/appstorecategories/{id}/apps/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def gets_one_app_associated_with_this_apikey(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Gets one app associated with this apikey
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/apps/{id}/",
        )

    def gets_all_apps_associated_with_this_apikey(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Gets all apps associated with this apikey
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/apps/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def updates_an_existing_app(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Updates an existing app
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/apps/{id}/",
            body=body,
        )