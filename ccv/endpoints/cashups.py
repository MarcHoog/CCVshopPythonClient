"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- GET /:version/cashups/ → Get all cash ups of this SalesPOS
- GET /:version/cashups/:id/ → Get a single cash up
- PATCH /:version/cashups/:id/ → Modifying a cash up
- POST /:version/cashups/ → Creates a new cash up with status OPEN
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Cashups:
    def __init__(self, client: 'CCVClient'):
        """
        A count and check off all the money that has been received by a business at the end of the day.
        """
        self.client: 'CCVClient' = client

    def get_all_cash_ups_of_this_salespos(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all cash ups of this SalesPOS
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/cashups/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_a_single_cash_up(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get a single cash up
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/cashups/{id}/",
        )

    def modifying_a_cash_up(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Modifying a cash up
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/cashups/{id}/",
            body=body,
        )

    def creates_a_new_cash_up_with_status_open(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Creates a new cash up with status OPEN
        """
        return self.client._post(
            uri_path="/api/rest/v1/cashups/",
            body=body,
        )