"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- GET /:version/cashups/ → Get all cash ups of this SalesPOS. Tip: Use parameters to limit the results.
- GET /:version/cashups/:id/ → Get a single cash up.
- OPTIONS /:version/cashups/ → None
- PATCH /:version/cashups/:id/ → Modifying a cash up, either entering closing_floats, counted balances or confirming the cash up.
- POST /:version/cashups/ → Creates a new cash up with status OPEN. You'll need to provide the initial float for the balances.
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Cashups(CCVApiEndpoints):
    """
    A count and check off all the money that has been received by a business at the end of the day.
    """

    def get_all_cash_ups_of_this_salespos_tip:_use_parameters_to_limit_the_results(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all cash ups of this SalesPOS. Tip: Use parameters to limit the results.
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/cashups/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_a_single_cash_up(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get a single cash up.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/cashups/{id}/",
        )

    def modifying_a_cash_up,_either_entering_closing_floats,_counted_balances_or_confirming_the_cash_up(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Modifying a cash up, either entering closing_floats, counted balances or confirming the cash up.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/cashups/{id}/",
            body=body,
        )

    def creates_a_new_cash_up_with_status_open_you'll_need_to_provide_the_initial_float_for_the_balances(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Creates a new cash up with status OPEN. You'll need to provide the initial float for the balances.
        """
        return self.client._post(
            uri_path="/api/rest/v1/cashups/",
            body=body,
        )