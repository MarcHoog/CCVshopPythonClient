"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/producttaxtariffexceptions/:id/ → Delete a product tax tariff exception.
- GET /:version/products/:id/producttaxtariffexceptions/ → Get all tax tariff exceptions for this product.
- GET /:version/producttaxtariffexceptions/:id/ → Get one tax tariff exception.
- OPTIONS /:version/producttaxtariffexceptions/ → None
- PATCH /:version/producttaxtariffexceptions/:id/ → Patch a product tax tariff exception.
- POST /:version/products/:id/producttaxtariffexceptions/ → Add a tax tariff exception to this product.
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Producttaxtariffexceptions(CCVApiEndpoints):
    """
    Exceptions to the standard tax tariff attached to a product.
    """

    def delete_a_product_tax_tariff_exception(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete a product tax tariff exception.
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/producttaxtariffexceptions/{id}/",
        )

    def get_all_tax_tariff_exceptions_for_this_product(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all tax tariff exceptions for this product.
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/products/{id}/producttaxtariffexceptions/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_one_tax_tariff_exception(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one tax tariff exception.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/producttaxtariffexceptions/{id}/",
        )

    def patch_a_product_tax_tariff_exception(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch a product tax tariff exception.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/producttaxtariffexceptions/{id}/",
            body=body,
        )

    def add_a_tax_tariff_exception_to_this_product(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Add a tax tariff exception to this product.
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/products/{id}/producttaxtariffexceptions/",
            body=body,
        )