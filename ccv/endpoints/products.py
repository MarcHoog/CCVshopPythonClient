"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/products/:id/ → Delete a product.
- GET /:version/brands/:id/products/ → Retrieve all products of the webshop in the parent category.
- GET /:version/webshops/:id/products/ → Retrieve all products of the webshop.
- GET /:version/products/ → Retrieve all products of the webshop.
- GET /:version/products/:id/ → Get one product.
- GET /:version/categories/:id/products/ → Retrieve all products of the webshop in the parent category.
- GET /:version/conditions/:id/products/ → Retrieve all products of the webshop in the parent category.
- GET /:version/suppliers/:id/products/ → Retrieve all products of the webshop in the parent category.
- OPTIONS /:version/products/ → None
- PATCH /:version/products/:id/ → Patch a product.
- POST /:version/products/ → Post a product. Also available: POST /:version/products/:id/webshops/ (for more details, please see the resource 'webshops').
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Products(CCVApiEndpoints):
    """
    All the active products of the webshop. Products that are in the trashcan won't be displayed.
    """

    def delete_a_product(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete a product.
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/products/{id}/",
        )

    def retrieve_all_products_of_the_webshop_in_the_parent_category(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Retrieve all products of the webshop in the parent category.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/brands/{id}/products/",
        )

    def retrieve_all_products_of_the_webshop(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Retrieve all products of the webshop.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/webshops/{id}/products/",
        )

    def retrieve_all_products_of_the_webshop(
        self,
    ) -> CCVShopResult:
        """
        Retrieve all products of the webshop.
        """
        return self.client._get(
            uri_path="/api/rest/v1/products/",
        )

    def get_one_product(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one product.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/products/{id}/",
        )

    def retrieve_all_products_of_the_webshop_in_the_parent_category(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Retrieve all products of the webshop in the parent category.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/categories/{id}/products/",
        )

    def retrieve_all_products_of_the_webshop_in_the_parent_category(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Retrieve all products of the webshop in the parent category.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/conditions/{id}/products/",
        )

    def retrieve_all_products_of_the_webshop_in_the_parent_category(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Retrieve all products of the webshop in the parent category.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/suppliers/{id}/products/",
        )

    def patch_a_product(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch a product.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/products/{id}/",
            body=body,
        )

    def post_a_product_also_available:_post_/:version/products/:id/webshops/_(for_more_details,_please_see_the_resource_'webshops')(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post a product. Also available: POST /:version/products/:id/webshops/ (for more details, please see the resource 'webshops').
        """
        return self.client._post(
            uri_path="/api/rest/v1/products/",
            body=body,
        )