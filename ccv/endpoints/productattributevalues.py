"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/productattributevalues/:id/ → Deletes one attribute value.
- GET /:version/products/:id/productattributevalues/ → Get all attribute values of this product.
- GET /:version/productattributevalues/:id/ → Get one attribute value.
- OPTIONS /:version/productattributevalues/ → None
- PATCH /:version/productattributevalues/:id/ → Patch a product attribute value.
- POST /:version/products/:id/productattributevalues/ → Create an attribute value for this product.
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Productattributevalues(CCVApiEndpoints):
    """
    Attribute values are part of attribute sets attached to this product.
    """

    def deletes_one_attribute_value(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Deletes one attribute value.
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/productattributevalues/{id}/",
        )

    def get_all_attribute_values_of_this_product(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all attribute values of this product.
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/products/{id}/productattributevalues/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_one_attribute_value(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one attribute value.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/productattributevalues/{id}/",
        )

    def patch_a_product_attribute_value(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch a product attribute value.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/productattributevalues/{id}/",
            body=body,
        )

    def create_an_attribute_value_for_this_product(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Create an attribute value for this product.
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/products/{id}/productattributevalues/",
            body=body,
        )