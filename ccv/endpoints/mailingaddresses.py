"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/mailingaddresses/:id/ → Delete a mailingaddress
- GET /:version/mailinglists/:id/mailingaddresses/ → Get all mailingaddresses that belong to this mailinglist
- GET /:version/mailingaddresses/:id/ → Get one mailingaddress
- GET /:version/mailingaddresses/ → Get all mailingaddresses
- PATCH /:version/mailingaddresses/:id/ → Patch a mailingaddress
- POST /:version/mailinglists/:id/mailingaddresses/ → Post a mailingaddress
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Mailingaddresses:
    def __init__(self, client: 'CCVClient'):
        """
        The mailingaddresses must be added to mailinglists. The webshop can send mails to these addresses.
        """
        self.client: 'CCVClient' = client

    def delete_a_mailingaddress(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete a mailingaddress
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/mailingaddresses/{id}/",
        )

    def get_all_mailingaddresses_that_belong_to_this_mailinglist(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all mailingaddresses that belong to this mailinglist
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/mailinglists/{id}/mailingaddresses/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_one_mailingaddress(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one mailingaddress
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/mailingaddresses/{id}/",
        )

    def get_all_mailingaddresses(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all mailingaddresses
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/mailingaddresses/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def patch_a_mailingaddress(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch a mailingaddress
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/mailingaddresses/{id}/",
            body=body,
        )

    def post_a_mailingaddress(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post a mailingaddress
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/mailinglists/{id}/mailingaddresses/",
            body=body,
        )