"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/apppsp/:id/ → Delete an App Payment Service Provider
- GET /:version/apps/:id/apppsp/ → Gets a collection of all (but always one) App Payment Service Provider
- GET /:version/apppsp/:id/ → Gets on App Payment Service Provider by Resource ID
- GET /:version/apppsp/ → Gets a collection of all (but always one) App Payment Service Provider
- PATCH /:version/apppsp/:id/ → Patches an existing App PSP
- POST /:version/apps/:id/apppsp/ → Creates a code block associated with an App
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Apppsp:
    def __init__(self, client: 'CCVClient'):
        """
        With an App you can create a custom PSP (Payment Service Provider).
        """
        self.client: 'CCVClient' = client

    def delete_an_app_payment_service_provider(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete an App Payment Service Provider
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/apppsp/{id}/",
        )

    def gets_a_collection_of_all_(but_always_one)_app_payment_service_provider(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Gets a collection of all (but always one) App Payment Service Provider
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/apps/{id}/apppsp/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def gets_on_app_payment_service_provider_by_resource_id(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Gets on App Payment Service Provider by Resource ID
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/apppsp/{id}/",
        )

    def gets_a_collection_of_all_(but_always_one)_app_payment_service_provider(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Gets a collection of all (but always one) App Payment Service Provider
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/apppsp/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def patches_an_existing_app_psp(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patches an existing App PSP
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/apppsp/{id}/",
            body=body,
        )

    def creates_a_code_block_associated_with_an_app(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Creates a code block associated with an App
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/apps/{id}/apppsp/",
            body=body,
        )