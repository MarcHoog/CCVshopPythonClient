"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- DELETE /:version/usergroups/:id/ → Delete a user group
- GET /:version/usergroups/ → Get all user groups
- GET /:version/usergroups/:id/ → Get one user group
- PATCH /:version/usergroups/:id/ → Patch a user group
- POST /:version/usergroups/ → Post a user group
"""

from typing import Dict
from ccv.result import CCVShopResult
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from ccv.client import CCVClient

class Usergroups:
    def __init__(self, client: 'CCVClient'):
        """
        Users can optionally be added to a usergroup. Each user in a group gets a certain amount of discount percentage.
        """
        self.client: 'CCVClient' = client

    def delete_a_user_group(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Delete a user group
        """
        return self.client._delete(
            uri_path=f"/api/rest/v1/usergroups/{id}/",
        )

    def get_all_user_groups(
        self,
    ) -> CCVShopResult:
        """
        Get all user groups
        """
        return self.client._get(
            uri_path="/api/rest/v1/usergroups/",
        )

    def get_one_user_group(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one user group
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/usergroups/{id}/",
        )

    def patch_a_user_group(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patch a user group
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/usergroups/{id}/",
            body=body,
        )

    def post_a_user_group(
        self,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post a user group
        """
        return self.client._post(
            uri_path="/api/rest/v1/usergroups/",
            body=body,
        )