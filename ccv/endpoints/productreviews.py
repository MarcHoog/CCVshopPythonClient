"""
This file is auto-generated by the CCVShop API code generator.

⚠️ Do not edit manually – changes will be overwritten.
Endpoints:
- GET /:version/products/:id/productreviews/ → Get all reviews of this product.
- GET /:version/productreviews/:id/ → Get one review.
- GET /:version/productreviews/ → Get all reviews place on the webshop.
- OPTIONS /:version/productreviews/ → None
- PATCH /:version/productreviews/:id/ → Patches an existing ProductReview. Depending on the webshop's settings review might need to be approved.
- POST /:version/products/:id/productreviews/ → Post a review for this product.
"""

from typing import Any, List, Dict
from ..result import CCVShopResult
from .endpoint import CCVApiEndpoints

class Productreviews(CCVApiEndpoints):
    """
    Displays a review left by a consumer on a product.
    """

    def get_all_reviews_of_this_product(
        self,
        id: str,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all reviews of this product.
        """
        return self.client._get_paged(
            uri_path=f"/api/rest/v1/products/{id}/productreviews/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def get_one_review(
        self,
        id: str,
    ) -> CCVShopResult:
        """
        Get one review.
        """
        return self.client._get(
            uri_path=f"/api/rest/v1/productreviews/{id}/",
        )

    def get_all_reviews_place_on_the_webshop(
        self,
        per_page: int = 100,
        total_pages: int = 1,
        **params,
    ) -> CCVShopResult:
        """
        Get all reviews place on the webshop.
        """
        return self.client._get_paged(
            uri_path="/api/rest/v1/productreviews/",
            per_page=per_page,
            total_pages=total_pages,
            **params,
        )

    def patches_an_existing_productreview_depending_on_the_webshop's_settings_review_might_need_to_be_approved(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Patches an existing ProductReview. Depending on the webshop's settings review might need to be approved.
        """
        return self.client._patch(
            uri_path=f"/api/rest/v1/productreviews/{id}/",
            body=body,
        )

    def post_a_review_for_this_product(
        self,
        id: str,
        body: Dict,
    ) -> CCVShopResult:
        """
        Post a review for this product.
        """
        return self.client._post(
            uri_path=f"/api/rest/v1/products/{id}/productreviews/",
            body=body,
        )